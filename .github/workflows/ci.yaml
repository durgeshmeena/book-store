name: Build and Test
on:
  push:
    branches:
      - main
      - release/v*
  pull_request:
    branches:
      - main
      - release/v*
  workflow_dispatch:

jobs:
  Lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python 3.11.2
        uses: actions/setup-python@v5
        with:
          python-version: '3.11.2'
          cache: 'pip'
      - name: Install Dev dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r dev-requirements.txt

      - name: Lint code with Ruff
        run: ruff check --output-format=github
        continue-on-error: true

      - name: Check code formatting (don't fail)
        run: ruff format --diff
        continue-on-error: true
      - name: Check code formatting with Ruff
        run: ruff format --diff

      - name: Run type checking with Pyright
        run: pyright
        continue-on-error: false

  # Run tests
  Test:
    runs-on: ubuntu-latest
    needs: Lint
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      MONGO_URI: ${{ secrets.MONGO_URI }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python 3.11.2
        uses: actions/setup-python@v5
        with:
          python-version: '3.11.2'
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r dev-requirements.txt
      - name: Run tests with pytest
        run: |
          pytest --doctest-modules --junitxml=junit/test-results.xml --cov=app --cov-report=xml --cov-report=html --cov-report=term-missing
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: junit/test-results.xml
        # always run this step to publish test results when there are test failures
        if: ${{ always() }}
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov
        if: ${{ always() }}  

      - name: Pytest coverage comment in PR
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-xml-coverage-path: coverage.xml
          title: Pytest Coverage Report
          create-new-comment: true
          junitxml-path: junit/test-results.xml
          junitxml-title: Pytest Unit Tests Summary
          report-only-changed-files: true
        if: ${{ always() }}  